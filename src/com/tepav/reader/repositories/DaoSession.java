package com.tepav.reader.repositories;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.tepav.reader.models.File;
import com.tepav.reader.models.Haber;
import com.tepav.reader.models.Gunluk;
import com.tepav.reader.models.Yayin;
import com.tepav.reader.models.User;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig fileDaoConfig;
    private final DaoConfig haberDaoConfig;
    private final DaoConfig gunlukDaoConfig;
    private final DaoConfig yayinDaoConfig;
    private final DaoConfig userDaoConfig;

    private final FileDao fileDao;
    private final HaberDao haberDao;
    private final GunlukDao gunlukDao;
    private final YayinDao yayinDao;
    private final UserDao userDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        fileDaoConfig = daoConfigMap.get(FileDao.class).clone();
        fileDaoConfig.initIdentityScope(type);

        haberDaoConfig = daoConfigMap.get(HaberDao.class).clone();
        haberDaoConfig.initIdentityScope(type);

        gunlukDaoConfig = daoConfigMap.get(GunlukDao.class).clone();
        gunlukDaoConfig.initIdentityScope(type);

        yayinDaoConfig = daoConfigMap.get(YayinDao.class).clone();
        yayinDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        fileDao = new FileDao(fileDaoConfig, this);
        haberDao = new HaberDao(haberDaoConfig, this);
        gunlukDao = new GunlukDao(gunlukDaoConfig, this);
        yayinDao = new YayinDao(yayinDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);

        registerDao(File.class, fileDao);
        registerDao(Haber.class, haberDao);
        registerDao(Gunluk.class, gunlukDao);
        registerDao(Yayin.class, yayinDao);
        registerDao(User.class, userDao);
    }
    
    public void clear() {
        fileDaoConfig.getIdentityScope().clear();
        haberDaoConfig.getIdentityScope().clear();
        gunlukDaoConfig.getIdentityScope().clear();
        yayinDaoConfig.getIdentityScope().clear();
        userDaoConfig.getIdentityScope().clear();
    }

    public FileDao getFileDao() {
        return fileDao;
    }

    public HaberDao getHaberDao() {
        return haberDao;
    }

    public GunlukDao getGunlukDao() {
        return gunlukDao;
    }

    public YayinDao getYayinDao() {
        return yayinDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

}
